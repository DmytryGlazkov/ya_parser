{
  "name": "supererror",
  "version": "0.5.0",
  "description": "Colorful console.error replacement",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nebulade/supererror.git"
  },
  "keywords": [
    "error",
    "console.error",
    "log"
  ],
  "author": {
    "name": "Johannes Zellner"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nebulade/supererror/issues"
  },
  "homepage": "https://github.com/nebulade/supererror",
  "dependencies": {
    "colors": "^0.6.2"
  },
  "readme": "supererror\n==========\n\nThis module provides colorful error logging. When included, it intercepts console.error.\nIt will print the file and line number where console.error() was called.\nAny Error object passed into it as an argument, will be printed as a string, as well as\nthe callstacks for all Error objects are printed at the end.\n\nUsage\n-----\n\n```javascript\nrequire('supererror');\n\nconsole.error('Some', new Error('transient error'), 'happened using', { some: 'value' });\nconsole.error();     // no info added\nconsole.error('Using %d as a %s.', 42, 'number');\n```\n\nResults in\n\n![Screenshot](http://i.imgur.com/8DwaEru.png)\n\nOptions\n-------\n\nThe module actually exports a function, which can be used to modify the behavior.\n\n```javascript\nrequire('supererror')({ errorTag: '[HAPPY]'.rainbow });\nrequire('supererror')({ timestamp: true });\n```\n\nAvailable options:\n\n * **errorTag** Change the error tag string. Use `null` or and empty string to not log an error tag. Default: `'[ERROR]'.red`\n * **timestamp** Add the current timestamp in ISO string format . Default: `false`\n\n",
  "readmeFilename": "README.md",
  "_id": "supererror@0.5.0",
  "_shasum": "32eee22c454e4b34835fb24f44eae5991b05f67d",
  "_from": "supererror@",
  "_resolved": "https://registry.npmjs.org/supererror/-/supererror-0.5.0.tgz"
}
